// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.12.4
// source: paymenthub.proto

package paymenthub

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PaymentHubService_SavePaymentHubConfig_FullMethodName    = "/payment.hub.config.PaymentHubService/SavePaymentHubConfig"
	PaymentHubService_GetPaymentHubConfig_FullMethodName     = "/payment.hub.config.PaymentHubService/GetPaymentHubConfig"
	PaymentHubService_GetAllPaymentHubConfigs_FullMethodName = "/payment.hub.config.PaymentHubService/GetAllPaymentHubConfigs"
	PaymentHubService_DeletePaymentHubConfig_FullMethodName  = "/payment.hub.config.PaymentHubService/DeletePaymentHubConfig"
)

// PaymentHubServiceClient is the client API for PaymentHubService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Service for managing PaymentHubConfig
type PaymentHubServiceClient interface {
	// Save a new or update an existing PaymentHubConfig
	SavePaymentHubConfig(ctx context.Context, in *SavePaymentHubConfigRequest, opts ...grpc.CallOption) (*SavePaymentHubConfigResponse, error)
	// Get a specific PaymentHubConfig by ID
	GetPaymentHubConfig(ctx context.Context, in *GetPaymentHubConfigRequest, opts ...grpc.CallOption) (*GetPaymentHubConfigResponse, error)
	// Get all PaymentHubConfig records
	GetAllPaymentHubConfigs(ctx context.Context, in *GetAllPaymentHubConfigsRequest, opts ...grpc.CallOption) (*GetAllPaymentHubConfigsResponse, error)
	// Delete a specific PaymentHubConfig by ID
	DeletePaymentHubConfig(ctx context.Context, in *DeletePaymentHubConfigRequest, opts ...grpc.CallOption) (*DeletePaymentHubConfigResponse, error)
}

type paymentHubServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPaymentHubServiceClient(cc grpc.ClientConnInterface) PaymentHubServiceClient {
	return &paymentHubServiceClient{cc}
}

func (c *paymentHubServiceClient) SavePaymentHubConfig(ctx context.Context, in *SavePaymentHubConfigRequest, opts ...grpc.CallOption) (*SavePaymentHubConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SavePaymentHubConfigResponse)
	err := c.cc.Invoke(ctx, PaymentHubService_SavePaymentHubConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentHubServiceClient) GetPaymentHubConfig(ctx context.Context, in *GetPaymentHubConfigRequest, opts ...grpc.CallOption) (*GetPaymentHubConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetPaymentHubConfigResponse)
	err := c.cc.Invoke(ctx, PaymentHubService_GetPaymentHubConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentHubServiceClient) GetAllPaymentHubConfigs(ctx context.Context, in *GetAllPaymentHubConfigsRequest, opts ...grpc.CallOption) (*GetAllPaymentHubConfigsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAllPaymentHubConfigsResponse)
	err := c.cc.Invoke(ctx, PaymentHubService_GetAllPaymentHubConfigs_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentHubServiceClient) DeletePaymentHubConfig(ctx context.Context, in *DeletePaymentHubConfigRequest, opts ...grpc.CallOption) (*DeletePaymentHubConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeletePaymentHubConfigResponse)
	err := c.cc.Invoke(ctx, PaymentHubService_DeletePaymentHubConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentHubServiceServer is the server API for PaymentHubService service.
// All implementations must embed UnimplementedPaymentHubServiceServer
// for forward compatibility.
//
// Service for managing PaymentHubConfig
type PaymentHubServiceServer interface {
	// Save a new or update an existing PaymentHubConfig
	SavePaymentHubConfig(context.Context, *SavePaymentHubConfigRequest) (*SavePaymentHubConfigResponse, error)
	// Get a specific PaymentHubConfig by ID
	GetPaymentHubConfig(context.Context, *GetPaymentHubConfigRequest) (*GetPaymentHubConfigResponse, error)
	// Get all PaymentHubConfig records
	GetAllPaymentHubConfigs(context.Context, *GetAllPaymentHubConfigsRequest) (*GetAllPaymentHubConfigsResponse, error)
	// Delete a specific PaymentHubConfig by ID
	DeletePaymentHubConfig(context.Context, *DeletePaymentHubConfigRequest) (*DeletePaymentHubConfigResponse, error)
	mustEmbedUnimplementedPaymentHubServiceServer()
}

// UnimplementedPaymentHubServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPaymentHubServiceServer struct{}

func (UnimplementedPaymentHubServiceServer) SavePaymentHubConfig(context.Context, *SavePaymentHubConfigRequest) (*SavePaymentHubConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePaymentHubConfig not implemented")
}
func (UnimplementedPaymentHubServiceServer) GetPaymentHubConfig(context.Context, *GetPaymentHubConfigRequest) (*GetPaymentHubConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPaymentHubConfig not implemented")
}
func (UnimplementedPaymentHubServiceServer) GetAllPaymentHubConfigs(context.Context, *GetAllPaymentHubConfigsRequest) (*GetAllPaymentHubConfigsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllPaymentHubConfigs not implemented")
}
func (UnimplementedPaymentHubServiceServer) DeletePaymentHubConfig(context.Context, *DeletePaymentHubConfigRequest) (*DeletePaymentHubConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePaymentHubConfig not implemented")
}
func (UnimplementedPaymentHubServiceServer) mustEmbedUnimplementedPaymentHubServiceServer() {}
func (UnimplementedPaymentHubServiceServer) testEmbeddedByValue()                           {}

// UnsafePaymentHubServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PaymentHubServiceServer will
// result in compilation errors.
type UnsafePaymentHubServiceServer interface {
	mustEmbedUnimplementedPaymentHubServiceServer()
}

func RegisterPaymentHubServiceServer(s grpc.ServiceRegistrar, srv PaymentHubServiceServer) {
	// If the following call pancis, it indicates UnimplementedPaymentHubServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PaymentHubService_ServiceDesc, srv)
}

func _PaymentHubService_SavePaymentHubConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePaymentHubConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentHubServiceServer).SavePaymentHubConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PaymentHubService_SavePaymentHubConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentHubServiceServer).SavePaymentHubConfig(ctx, req.(*SavePaymentHubConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentHubService_GetPaymentHubConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaymentHubConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentHubServiceServer).GetPaymentHubConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PaymentHubService_GetPaymentHubConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentHubServiceServer).GetPaymentHubConfig(ctx, req.(*GetPaymentHubConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentHubService_GetAllPaymentHubConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPaymentHubConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentHubServiceServer).GetAllPaymentHubConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PaymentHubService_GetAllPaymentHubConfigs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentHubServiceServer).GetAllPaymentHubConfigs(ctx, req.(*GetAllPaymentHubConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentHubService_DeletePaymentHubConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePaymentHubConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentHubServiceServer).DeletePaymentHubConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PaymentHubService_DeletePaymentHubConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentHubServiceServer).DeletePaymentHubConfig(ctx, req.(*DeletePaymentHubConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PaymentHubService_ServiceDesc is the grpc.ServiceDesc for PaymentHubService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PaymentHubService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "payment.hub.config.PaymentHubService",
	HandlerType: (*PaymentHubServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SavePaymentHubConfig",
			Handler:    _PaymentHubService_SavePaymentHubConfig_Handler,
		},
		{
			MethodName: "GetPaymentHubConfig",
			Handler:    _PaymentHubService_GetPaymentHubConfig_Handler,
		},
		{
			MethodName: "GetAllPaymentHubConfigs",
			Handler:    _PaymentHubService_GetAllPaymentHubConfigs_Handler,
		},
		{
			MethodName: "DeletePaymentHubConfig",
			Handler:    _PaymentHubService_DeletePaymentHubConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paymenthub.proto",
}
